services:
  redis:
    image: redis:alpine
    ports:
      - "${REDIS_PORT}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - observer_network

  alembic:
    build: .
    command: alembic upgrade head
    volumes:
      - .:/app
    networks:
      - observer_network

  celery:
    build: .
    command: >
      celery -A celery_worker:celery worker -l info -E
    environment:
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    networks:
      - observer_network

  flower:
    build: .
    command: >
      celery --broker=redis://redis:6379/0 flower --address=0.0.0.0 --port=${FLOWER_PORT} --inspect-timeout=10
    ports:
      - "${FLOWER_PORT}:${FLOWER_PORT}"
    depends_on:
      - redis
      - celery
    volumes:
      - .:/app
    networks:
      - observer_network

  web:
    tty: true
    stdin_open: true
    build: .
    dns:
      - 127.0.0.11
    ports:
      - "${FLASK_PORT}:${FLASK_PORT}"
    environment:
      - REDIS_URL=redis://redis:6379/0
      - CONFIG_NAME=${ENV:-Development}
    depends_on:
      - celery
      - alembic
    volumes:
      - .:/app
      - ./shared_temp:/shared_temp
    command: >
       gunicorn -c gunicorn.conf.py --worker-class gevent --bind 0.0.0.0:${FLASK_PORT} wsgi_web:app
    networks:
      - observer_network

  gateway:
    build:
      context: .
    environment:
      - CONFIG_NAME=${ENV:-Development}
      - REDIS_URL=redis://redis:6379/0
    command: >
      gunicorn -c gunicorn.conf.py --worker-class gevent --bind 0.0.0.0:${GATEWAY_PORT} wsgi_gateway:app
    ports:
      - "${GATEWAY_PORT}:${GATEWAY_PORT}"
    depends_on:
      - redis
    networks:
      - observer_network

  scheduler:
    build:
      context: .
    environment:
      - CONFIG_NAME=${ENV:-Development} # Указывает среду (по умолчанию Development)
      - REDIS_URL=redis://redis:6379/0
    command: >
      gunicorn -c gunicorn.conf.py --worker-class gevent --bind 0.0.0.0:${SCHEDULER_PORT} wsgi_scheduler:app
    depends_on:
      - redis
    networks:
      - observer_network

networks:
  observer_network:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1500
